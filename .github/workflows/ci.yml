name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

permissions:
  contents: read

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  TEST_IMAGE_TAG: test-${{ github.sha }}

jobs:
  test-and-build:
    name: Test and Build
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      packages: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Ruby for Rake
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.4.4'
        bundler-cache: true

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=tag
          type=ref,event=pr
          type=sha

    - name: Build and push test image
      uses: docker/build-push-action@v5
      with:
        context: .
        target: test
        tags: |
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:test-${{ github.sha }}
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:test-${{ github.head_ref || github.ref_name }}
        cache-from: |
          type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:test-main
          type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:test-${{ github.head_ref || github.ref_name }}
          type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:main
        cache-to: type=inline
        push: true
        load: true

    - name: Run tests and quality checks
      run: |
        export TEST_IMAGE="${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.TEST_IMAGE_TAG }}"
        docker run --rm -e COVERAGE=true -e COVERAGE_DIR=/tmp/coverage "$TEST_IMAGE" bundle exec rspec
        docker run --rm "$TEST_IMAGE" bundle exec rubocop
        docker run --rm "$TEST_IMAGE" bundle exec reek
        docker run --rm "$TEST_IMAGE" bundle exec bundler-audit check --update

    - name: Test examples
      run: |
        docker run --rm -v $PWD/examples:/app/examples:ro \
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.TEST_IMAGE_TAG }} \
          /app/examples/test_examples_in_container.sh

    - name: Build and push production image
      if: success()
      uses: docker/build-push-action@v5
      with:
        context: .
        target: production
        tags: |
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.head_ref || github.ref_name }}
          ${{ github.ref == 'refs/heads/main' && format('{0}/{1}:latest', env.REGISTRY, env.IMAGE_NAME) || '' }}
        cache-from: |
          type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:main
          type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.head_ref || github.ref_name }}
          type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:test-${{ github.sha }}
        cache-to: type=inline
        push: true
        load: true

    - name: Smoke test production image
      if: success()
      run: |
        RESPONSE=$(echo '{"jsonrpc":"2.0","id":1,"method":"initialize"}' | \
          docker run --rm -i ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }} 2>/dev/null)
        echo "Response: $RESPONSE"
        if echo "$RESPONSE" | grep -q "protocolVersion"; then
          echo "✅ Production image smoke test passed"
        else
          echo "❌ Production image smoke test failed"
          exit 1
        fi

    - name: Summary of pushed images
      if: success()
      run: |
        {
          echo "## Docker Images Published"
          echo ""
          echo "### Test Image:"
          echo "- \`${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.TEST_IMAGE_TAG }}\`"
          echo "- \`${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:test-${{ github.head_ref || github.ref_name }}\`"
          echo ""
          echo "### Production Image:"
          echo "- \`${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}\`"
          echo "- \`${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.head_ref || github.ref_name }}\`"
          if [ "${{ github.ref }}" = "refs/heads/main" ]; then
            echo "- \`${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest\`"
          fi
        } >> $GITHUB_STEP_SUMMARY